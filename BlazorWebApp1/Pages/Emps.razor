@page "/employees"
@inject HttpClient Http

<h1>Employees</h1>

@if (res == null)
{
    <p><em>Loading...</em></p>
}
else
{
    @res; 

    
@*
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
*@
}

@res

@code {
    WeatherForecast[] forecasts;
    string res;

    protected override async Task OnInitAsync()
    {
        //        res = "test";
        System.Diagnostics.Debug.WriteLine("before: debug test");
        Console.WriteLine("before ***********");
        //        res = await Http.GetStringAsync("https://www.nytimes.com/");

        try
        {
            res = await Http.GetStringAsync("https://localhost:44315/api/emps");
        }
        catch(Exception e)
        {
            Console.WriteLine(e.Message);
        }
        System.Diagnostics.Debug.WriteLine("after: debug test");
        Console.WriteLine(res);
        StateHasChanged();
        //forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public int TemperatureF { get; set; }

        public string Summary { get; set; }
    }
}
