@page "/todo"

<h1>Todo (@todos.Count(i => !i.IsDone)) </h1>

<ul>
    @foreach (var todo in todos)
    {
        <li>
            <input type="checkbox" @bind="@todo.IsDone" />
            <input @bind="@todo.Title" />
        </li>
    }
</ul>

<input placeholder="Something todo" @bind="@newTodo" @onkeypress="@(e => TxtKeyPress(e))" />
<button @onclick="@AddTodo">Add todo</button>
<button @onclick="@RemvTodo">Remove todo</button>

@* DynamicFragment *@

@tst

@code {
    private string dynamicContent = "This is a long text...";
    private string tst;

    private IList<TodoItem>
        todos = new List<TodoItem>
            ();
    private string newTodo;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }

    private void RemvTodo()
    {
        if (todos.Count > 0)
        {
            todos.RemoveAt(todos.Count - 1);
        }
    }

    private void TxtKeyPress(UIKeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            tst += "Enter";
        }
    }

    @*
    protected override Task OnInitializedAsync()
    {
        
        
        DynamicFragment = builder =>
        {
            dynamicContent = dynamicContent.Replace("long", "long, long");
            builder.OpenElement(1, "p");
            builder.AddContent(2, dynamicContent);
            builder.CloseElement();
        };
            
    }
*@

    //private Microsoft.AspNetCore.Blazor.RenderFragment DynamicFragment
    private RenderFragment DynamicFragment;
}
