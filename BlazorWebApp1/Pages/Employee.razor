@page "/employee/{id:int}"
@inject HttpClient Http
@using ClassLibrary2.Models
@using Newtonsoft.Json



<div class="sidebar" style="width:25%; float:left">
    <NavMenu MnuCtrl="Employee" />
</div>

<h1> Employee @(ID == 0 ? "New" : "Edit") </h1>

@if (res == null && ID != 0)
{
    <p><em>Loading...</em></p>
}
else
{
    @if (ID > 0)
    {
        @emp.FirstName @emp.LastName
        @emp.FullName
    }
    else
    {
        <label>New Employee</label>
    }

    <br />
    <fieldset>
        <legend>Fruit juice size</legend>
        <input id="FirstName" placeholder="First Name" @bind="@emp.FirstName" @onclick="@debug" />
        <label for="FirstName" accesskey="f"><u>F</u>irst Name</label>

        <input id="LastName" placeholder="Last Name" @bind="@emp.LastName" />
        <label for="LastName" accesskey="f"><u>L</u>ast Name</label>
    </fieldset>

    <button @onclick="@EmpUpdt">@(ID == 0 ? "Add" : "Update") Employee</button>
}

@code{
    [Parameter]
    public int ID { get; set; }
    string res;
    Emp emp;

    private void debug()
    {
        Console.WriteLine(emp.FirstName);
    }

    protected override async Task OnInitializedAsync()
    {
        if (ID == 0) //or 0
        {
            emp = new Emp();
            return;
        }

        try
        {
            Console.WriteLine("before");
            res = await Http.GetStringAsync($"https://localhost:44315/api/emps/{ID}");
            Console.WriteLine(res);
            emp = JsonConvert.DeserializeObject<List<Emp>>(res)[0];
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
        System.Diagnostics.Debug.WriteLine("after: debug test");
    }

    // Post if EmpID = 0, it is new emp
    private async Task EmpUpdt()
    {
        TodoItem td = new TodoItem{Title = "test123", IsDone = false};  
        //var itm = "{\"id\": 2,\"Name\": \"dog walk 2\",\"IsComplete\": true}";
        HttpClient hc = new HttpClient();
        var res2 = JsonConvert.SerializeObject(td);
        Console.WriteLine(res2);
        var resp = await Http.PostJsonAsync<HttpResponseMessage>(" https://localhost:44315/api/todo/", res2);
        Console.WriteLine("after post");
        Console.WriteLine(resp.StatusCode.ToString());
        return;
        Console.WriteLine("Updt" + ID.ToString());
        //        emp.FirstName = "Joe";
        //emp.ID = 6002; //id should be 0, or ID
        HttpResponseMessage msg;
        var res = JsonConvert.SerializeObject(emp);
        if (ID > 0)
            //await Http.PutJsonAsync($"https://localhost:44315/api/emps/{ID}", res);
            msg = await Http.PutJsonAsync<HttpResponseMessage>($"https://localhost:44315/api/emps/{ID}", res);
        else
            await Http.PostJsonAsync("https://localhost:44315/api/emps/0", res);
    }

}
